[
    {
        "id": "dbe661dc.d6bff",
        "type": "comment",
        "z": "490e650d.6b185c",
        "name": "From NS to Location Solver - REST",
        "info": "",
        "x": 200,
        "y": 120,
        "wires": []
    },
    {
        "id": "d9eeeafd.993c18",
        "type": "comment",
        "z": "490e650d.6b185c",
        "name": "From Location Solver to NS - REST",
        "info": "",
        "x": 200,
        "y": 260,
        "wires": []
    },
    {
        "id": "8dddd520.1ce038",
        "type": "comment",
        "z": "490e650d.6b185c",
        "name": "Actility Integration Examples",
        "info": "",
        "x": 140,
        "y": 60,
        "wires": []
    },
    {
        "id": "aaf893fd.ec13b",
        "type": "http in",
        "z": "490e650d.6b185c",
        "name": "",
        "url": "/uplink_actility/0001",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 220,
        "y": 200,
        "wires": [
            [
                "643c8886.cf7f28",
                "a88bf6cc.f68998"
            ]
        ]
    },
    {
        "id": "643c8886.cf7f28",
        "type": "http response",
        "z": "490e650d.6b185c",
        "name": "http response",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 520,
        "y": 220,
        "wires": []
    },
    {
        "id": "a88bf6cc.f68998",
        "type": "function",
        "z": "490e650d.6b185c",
        "name": "Actility UL interface",
        "func": "/******************************************/\n/*** Actility UL interface              ***/\n/******************************************/\n\nbody = (typeof msg.payload == 'string') ? JSON.parse(msg.payload) : msg.payload;\n\nif (!body.DevEUI_uplink) { \n    throw new Error(\"Missing property: DevEUI_uplink;   \" + JSON.stringify(msg.payload) );\n}\nbody = body.DevEUI_uplink;\n\nlet feeds = {\n    // deviceEUI: \"\",                                     // mandatory\n    // time: \"\",\n    // coordinates: [],                                   // [longitude, latitude, altitude]\n                                                          // used if NS provides resolved coordinates\n    solverInput: {\n        solverInputType: \"FeedInputForWifiSolver\",\n        // sequenceNumber: 1,                             // LoRaWAN FCntUp\n        // port: 1,                                       // LoRaWAN FPort\n        // receptionTime: \"\",\n        // SF: 12,                                        // LoRaWAN Spreading Factor\n        packets: [\n            // {\n                // baseStationId: \"0805022D\",\n                // antennaId: 0,\n                // antennaCoordinates: [7.0513, 43.6181], // [longitude, latitude, altitude]\n                // antennaHeight: 150,                    // in cm\n                // SNR: 10,                               // in dB\n                // RSSI: -29,                             // in dBm\n                // barometerMeasure: 0,                   // in mB\n                // arrivalSeconds: 1,                     // in seconds\n                // arrivalAdditionalNanos: 7275           // in nanoseconds\n            // }\n        ]\n        // dynamicMotionState: \"string\",    // ['MOVING', 'STATIC', 'UNKNOWN']\n        // temperatureMeasure: 0,           // in Celsius\n        // accelerometerMeasures: [],       // measures per axis, i.e. [x, y, z]\n        // gyroscopeMeasures: [],           // measures per axis, i.e. [roll, pitch, yaw]\n        // barometerMeasure: 0,             // in mBar\n        // lastContext: \"string\"            // Base64 encoded binary solver state\n                                            // with the last calculated position\n    },\n    payload: {\n        deviceProfileId: \"ABEEWAY/MICRO\",   // Currently only Abeeway Microtracker and\n                                            // Industrial Tracker are supported. \"deviceProfileId\"\n                                            // should be set to \"ABEEWAY/MICRO\" for both\n        payloadEncoded: \"\"\n    }\n}\n\nif ('DevEUI' in body) {\n    feeds.deviceEUI = body.DevEUI;\n} else {\n    throw new Error(\"Missing property: DevEUI\");\n}\n\nif ('Time' in body) { \n    feeds.time = body.Time;   \n}\nif ('FCntUp' in body) { \n    feeds.solverInput.sequenceNumber = body.FCntUp; \n}\nif ('FPort' in body) { \n    feeds.solverInput.port = body.FPort; \n}\nif ('Time' in body) { \n    feeds.solverInput.receptionTime = body.Time; \n}\nif ('SpFact' in body) { \n    feeds.solverInput.SF = body.SpFact; \n}\n\nif ( \n    ('Lrrs' in body) && \n    ('Lrr' in body.Lrrs) && \n    Array.isArray(body.Lrrs.Lrr) \n) { \n    let lrr = body.Lrrs.Lrr; // Array of base stations\n    let packet;\n    for (let i=0; i<lrr.length; i++) {\n        packet = {};\n        if ('Lrrid' in lrr[i]) { \n            packet.baseStationId = lrr[i].Lrrid; \n        } \n        if ('LrrSNR' in lrr[i]) { \n            packet.SNR = lrr[i].LrrSNR; \n        }\n        if ('LrrRSSI' in lrr[i]) { \n            packet.RSSI = lrr[i].LrrRSSI; \n        }\n        if ( ('LrrLAT' in lrr[i]) && ('LrrLON' in lrr[i]) ) {\n            packet.antennaCoordinates = [\n                lrr[i].LrrLON,\n                lrr[i].LrrLAT, \n            ]; \n        } else if (\n            ('Lrrid' in body ) &&\n            (body.Lrrid === lrr[i].Lrrid) &&\n            ('LrrLAT' in body) && \n            ('LrrLON' in body) \n        ) {\n            packet.antennaCoordinates = [\n                body.LrrLON,\n                body.LrrLAT, \n            ];\n        }\n        feeds.solverInput.packets.push(packet);\n    }\n}\n\nif ('payload_hex' in body) { \n    feeds.payload.payloadEncoded = body.payload_hex; \n}\n\nmsg.payload = feeds;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 180,
        "wires": [
            [
                "7328c11c.c7c41",
                "b137a5c.001ac58",
                "f7fa8cff.9921e"
            ]
        ]
    },
    {
        "id": "55be3f32.bc8fd",
        "type": "inject",
        "z": "490e650d.6b185c",
        "name": "Sample msg - Actility",
        "topic": "",
        "payload": "{\"DevEUI_uplink\":{\"Time\":\"2020-01-01T21:53:13.780+01:00\",\"DevEUI\":\"20635F0108000496\",\"FPort\":17,\"FCntUp\":16,\"ADRbit\":1,\"MType\":2,\"FCntDn\":6,\"payload_hex\":\"0a50f6830000\",\"mic_hex\":\"d80954bb\",\"Lrcid\":\"00000211\",\"LrrRSSI\":-52,\"LrrSNR\":11.5,\"SpFact\":9,\"SubBand\":\"G2\",\"Channel\":\"LC4\",\"DevLrrCnt\":1,\"Lrrid\":\"100003ED\",\"Late\":0,\"LrrLAT\":47.466702,\"LrrLON\":19.047592,\"Lrrs\":{\"Lrr\":[{\"Lrrid\":\"100003ED\",\"Chain\":0,\"LrrRSSI\":-52,\"LrrSNR\":11.5,\"LrrESP\":-52.297062}]},\"CustomerID\":\"100040803\",\"CustomerData\":{\"alr\":{\"pro\":\"ABEE/APY\",\"ver\":\"1\"}},\"ModelCfg\":\"0\",\"InstantPER\":0,\"MeanPER\":0,\"DevAddr\":\"05AE3D2F\",\"TxPower\":9.75,\"NbTrans\":1}}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 190,
        "y": 160,
        "wires": [
            [
                "a88bf6cc.f68998"
            ]
        ]
    },
    {
        "id": "7328c11c.c7c41",
        "type": "debug",
        "z": "490e650d.6b185c",
        "name": "debug: to Solver",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 800,
        "y": 140,
        "wires": []
    },
    {
        "id": "b137a5c.001ac58",
        "type": "http request",
        "z": "490e650d.6b185c",
        "name": "Send UL to Location Solver",
        "method": "POST",
        "ret": "txt",
        "paytoqs": false,
        "url": "https://dx-api.thingpark.com/location/latest/api/feeds",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "bearer",
        "x": 1080,
        "y": 180,
        "wires": [
            [
                "d0881f51.96a7f"
            ]
        ]
    },
    {
        "id": "d0881f51.96a7f",
        "type": "debug",
        "z": "490e650d.6b185c",
        "name": "debug: Solver response",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1110,
        "y": 140,
        "wires": []
    },
    {
        "id": "ba344062.6bb63",
        "type": "http in",
        "z": "490e650d.6b185c",
        "name": "",
        "url": "/downlink_actility/0001",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 230,
        "y": 340,
        "wires": [
            [
                "552f8d2d.60f9c4",
                "5c50df67.3a7a8"
            ]
        ]
    },
    {
        "id": "552f8d2d.60f9c4",
        "type": "http response",
        "z": "490e650d.6b185c",
        "name": "http response",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 520,
        "y": 360,
        "wires": []
    },
    {
        "id": "5c50df67.3a7a8",
        "type": "function",
        "z": "490e650d.6b185c",
        "name": "Actility DL interface",
        "func": "/******************************************/\n/*** Actility DL interface              ***/\n/******************************************/\n\nmsg.params = {\n    \"DevEUI\": msg.payload.deveui,\n    \"FPort\": msg.payload.port,\n    \"Payload\": msg.payload.payload\n};\nmsg.headers = {\"content-type\": \"application/x-www-form-urlencoded\"}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 320,
        "wires": [
            [
                "7e9c30e3.9ebd2",
                "f37633bd.5d2c"
            ]
        ]
    },
    {
        "id": "534244b5.26e25c",
        "type": "inject",
        "z": "490e650d.6b185c",
        "name": "Sample msg - Loc Solver",
        "topic": "",
        "payload": "{\"type\":\"downlink\",\"deveui\":\"20635F0108000496\",\"port\":12,\"payload\":\"AABBCC\"}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 210,
        "y": 300,
        "wires": [
            [
                "5c50df67.3a7a8"
            ]
        ]
    },
    {
        "id": "7e9c30e3.9ebd2",
        "type": "debug",
        "z": "490e650d.6b185c",
        "name": "debug: to NS",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 790,
        "y": 280,
        "wires": []
    },
    {
        "id": "f37633bd.5d2c",
        "type": "http request",
        "z": "490e650d.6b185c",
        "name": "Send DL to Actility NS!!!",
        "method": "POST",
        "ret": "txt",
        "paytoqs": false,
        "url": "https://api-dev1.thingpark.com/thingpark/lrc/rest/downlink?DevEUI={{params.DevEUI}}&FPort={{params.FPort}}&Payload={{params.Payload}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1070,
        "y": 320,
        "wires": [
            [
                "50d6dbbb.286574"
            ]
        ]
    },
    {
        "id": "50d6dbbb.286574",
        "type": "debug",
        "z": "490e650d.6b185c",
        "name": "debug: NS response",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1100,
        "y": 280,
        "wires": []
    },
    {
        "id": "f7fa8cff.9921e",
        "type": "link out",
        "z": "490e650d.6b185c",
        "name": "To Codec Service, To Location Solver",
        "links": [
            "da189ded.e2ddc",
            "ff201d2f.bf016",
            "88ffbc99.452ca",
            "22028fd3.6d5d9",
            "4c5b4326.05cbcc",
            "c2754bbe.3f2c48"
        ],
        "x": 975,
        "y": 220,
        "wires": []
    }
]
